{"version":3,"sources":["logo.svg","App.js","Show_Stock.js","UserLogin.js","reportWebVitals.js","index.js"],"names":["App","get_stock_data","stockname","a","fetch","then","data","json","console","log","data1","JSON","parse","DailyK","data2","Volume","ohlc","volume","dataLength","length","groupingUnits","i","push","options","rangeSelector","buttons","type","count","text","selected","inputEnabled","title","yAxis","labels","align","x","height","lineWidth","resize","enabled","top","offset","distance","y","tooltip","split","series","name","dataGrouping","units","plotOptions","candlestick","color","upColor","StockGraph","props","React","useState","setData","useEffect","show_graph","resp","highcharts","Highcharts","constructorType","Stock","searchText","setSearch","result","setResult","selectResult","setSelect","stocklist","setList","val","onChange","event","target","value","onClick","indexOf","map","index","Login","responseGoogle","response","googleId","clientId","buttonText","onSuccess","onFailure","cookiePolicy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.399ec5f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react'\r\nimport Highcharts from 'highcharts/highstock'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nasync function get_stock_data(stockname) {\r\n  return fetch('https://histock.tw/stock/chip/chartdata.aspx?no=' + stockname + '&days=80&m=dailyk,volume')\r\n    .then(function (data) {\r\n      return data.json();\r\n    })\r\n}\r\n\r\nasync function show_graph(stockname) {\r\n  console.log(stockname);\r\n  let data = await get_stock_data(stockname);\r\n  console.log(data);\r\n  let data1 = JSON.parse(data.DailyK);\r\n  let data2 = JSON.parse(data.Volume);\r\n\r\n\r\n  // split the data set into ohlc and volume\r\n  var ohlc = [],\r\n    volume = [],\r\n    dataLength = data1.length,\r\n    // set the allowed units for data grouping\r\n    groupingUnits = [[\r\n      'day',                         // unit name\r\n      [1]                             // allowed multiples\r\n    ], [\r\n      'month',\r\n      [1, 2, 3, 4, 6]\r\n    ]],\r\n\r\n    i = 0;\r\n\r\n  for (i; i < dataLength; i += 1) {\r\n    ohlc.push([\r\n      data1[i][0], // the date\r\n      data1[i][1], // open\r\n      data1[i][2], // high\r\n      data1[i][3], // low\r\n      data1[i][4] // close\r\n    ]);\r\n\r\n    volume.push([\r\n      data2[i][0], // the date\r\n      data2[i][1] // the volume\r\n    ]);\r\n  }\r\n\r\n\r\n  // create the chart\r\n  let options = {\r\n\r\n    rangeSelector: {\r\n      buttons: [\r\n        {\r\n          type: 'month',\r\n          count: 1,\r\n          text: 'month'\r\n        }, {\r\n          type: 'All',\r\n          count: 1,\r\n          text: 'All'\r\n        }],\r\n      selected: 1,\r\n      inputEnabled: false\r\n    },\r\n\r\n    title: {\r\n      text: stockname + ' Historical'\r\n    },\r\n\r\n    yAxis: [{\r\n      labels: {\r\n        align: 'right',\r\n        x: -3\r\n      },\r\n      title: {\r\n        text: 'OHLC'\r\n      },\r\n      height: '60%',\r\n      lineWidth: 2,\r\n      resize: {\r\n        enabled: true\r\n      }\r\n    }, {\r\n      labels: {\r\n        align: 'right',\r\n        x: -3\r\n      },\r\n      title: {\r\n        text: 'Volume'\r\n      },\r\n      top: '65%',\r\n      height: '35%',\r\n      offset: 0,\r\n      lineWidth: 2,\r\n      resize: {\r\n        enabled: true\r\n      },\r\n      distance: '100%',\r\n      y: 100\r\n    }],\r\n\r\n    tooltip: {\r\n      split: true\r\n    },\r\n\r\n    series: [{\r\n      type: 'candlestick',\r\n      //color: '#FF0000',\r\n      name: stockname,\r\n      data: ohlc,\r\n      dataGrouping: {\r\n        units: groupingUnits\r\n      }\r\n    }, {\r\n      type: 'column',\r\n      name: 'Volume',\r\n      data: volume,\r\n      yAxis: 1,\r\n      dataGrouping: {\r\n        units: groupingUnits\r\n      },\r\n    }],\r\n    plotOptions: {\r\n      candlestick: {\r\n        color: 'green',\r\n        upColor: 'red'\r\n      }\r\n    },\r\n  };\r\n  return options;\r\n}\r\n\r\nfunction Stock() {\r\n\r\n\r\n  let [searchText, setSearch] = React.useState(\"\");\r\n  let [result, setResult] = React.useState(\"\");\r\n  let [selectResult, setSelect] = React.useState(\"0\");\r\n  let [stocklist, setList] = React.useState([]);\r\n\r\n  const handleChanged = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    setResult(searchText);\r\n  };\r\n\r\n  const selectChanged = (event) => {\r\n    console.log(\"選到了\", event.target.value);\r\n    setSelect(event.target.value);\r\n\r\n  };\r\n\r\n  const AddStock = () => {\r\n    if(stocklist.indexOf(searchText)===-1){\r\n      setList([...stocklist, searchText]);\r\n    }\r\n  };\r\n  console.log(stocklist,);\r\n  return (\r\n    <div>\r\n      <input val={searchText} onChange={handleChanged} />\r\n      <button onClick={handleSearch}>Search</button>\r\n      <button onClick={AddStock}>Add</button>\r\n      <label>\r\n        fav:\r\n      <select value={selectResult} onChange={selectChanged}>\r\n          <option value=\"0\">請選擇</option>\r\n          {\r\n            stocklist.map((data, index) => <option value={index+1} key = {index}>{data}</option>)\r\n          }\r\n        </select>\r\n      </label>\r\n\r\n      <div>{result}</div>\r\n      <StockGraph stockname={result} />\r\n    </div>)\r\n}\r\n\r\nfunction StockGraph(props) {\r\n  let stockname = props.stockname;\r\n  let [data, setData] = React.useState([]);\r\n  console.log(data,stockname,data.length);\r\n  React.useEffect(() => {\r\n    console.log(stockname);\r\n    show_graph(stockname)\r\n      .then((resp) => {\r\n        setData(resp);\r\n      });\r\n  }, [stockname]);\r\n  if (!stockname) return <h1>no stockname</h1>;\r\n  if (data.length === 0) return <h1>Loading</h1>;\r\n  return (\r\n    <HighchartsReact\r\n      highcharts={Highcharts}\r\n      constructorType={\"stockChart\"}\r\n      options={data}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Stock\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nfunction Login() {\r\n\r\n    const responseGoogle = (response) => {\r\n        console.log(response.googleId);\r\n    }\r\n    return (\r\n        <GoogleLogin\r\n            clientId=\"718990108790-il6qfr68ffivhvdbpte6l1f6m77lvt7e.apps.googleusercontent.com\"\r\n            buttonText=\"Login\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport default Login\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Stock from './Show_Stock'\r\nimport Login from './UserLogin'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Stock />\r\n    <Login />\r\n  </React.StrictMode>,\r\n  document.getElementById('googleButton')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}